const readline = require("readline").createInterface({
    input: process.stdin,
    output: process.stdout,
});

var questions = [
    {
        question: "Кои от изброените са стандарти за качество на продукт?",
        options: [
            "A - Пускане на нови версии на системата",
            "B - Спецификация на софтуерните изисквания",
            "C - Ревю на дизайна",
            "D - Java стил на програмиране",
        ],
        correctAnswers: ["B", "C"],
    },
    {
        question: "Кое от следните твърдения е вярно?",
        options: [
            "A - Прототипния модел улеснява повторното използване на компоненти",
            "B - Всички посочени твърдения са неверни",
            "C - И двата модела - Прототипен и Модела на бързата/стръмната разработка – улесняват повторното използване на компоненти",
            "D - Моделът на бързата/стръмната разработка улеснява повторното използване на компоненти",
        ],
        correctAnswers: ["C"],
    },
    {
        question: "*Кое от изброените не е част от плана на качеството?",
        options: [
            "A - Рискове и стратегии за елиминиране на рискове",
            "B - Кратко описание на продукта",
            "C - Описания на процеса",
            "D - Описания на тестовите случаи",
            "E - Дизайн на продукта",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Ladder диаграмите представляват специфичен програмен език, който наподобява кода на С++",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["B"],
    },
    {
        question:
            "В 4 + 1 модела на софтуерната архитектура изгледът на процесите показва поведението на системата.",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question: "UML клас диаграма е диаграма, която:",
        options: [
            "A - Показва йерархията на класовете на даден софтуер",
            "B - Показва множество от класовете на даден софтуер като определя и времето им за изпълнение",
            "C - Показва връзките между процесите на даден софтуер",
            "D - Показва множество от класовете на даден софтуер, но не показва връзките помежду им",
        ],
        correctAnswers: ["A"],
    },
    {
        question: "Кое от изброените не е техника за валидиране на изискванията?",
        options: [
            "A - Изграждане на сценарии",
            "B - Генериране на тестови случаи",
            "C - Прототипиране",
            "D - Ревюта на изискванията",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "Кои от изброените оказват най-силно влияние върху комуникацията в екипа (Три верни отговора)",
        options: [
            "A - йерархия в екипа",
            "B - изборът на процес",
            "C - големината на екип",
            "D - опитността на екипа",
            "E - балансът на половете между екипа",
        ],
        correctAnswers: ["A", "B", "C"],
    },
    {
        question: "Софтуерната архитектура се използва като",
        options: [
            "A - Модел на системата",
            "B - Средство за комуникация между софтуерните инженери и последващ анализ на системата",
            "C - Средство за реклама на производителността на системата сред крайните потребители",
            "D - Инструмент за извличане на кода на системата от изискванията към нея",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "Процесът, при който група хора щателно изследва част или целия софтуер, с цел да се установят аномалии и дефекти се нарича",
        options: ["A - Валидация", "B - Верификация", "C - Тестване", "D - Инспекция"],
        correctAnswers: ["C"],
    },
    {
        question: "От какъв вид е следната диаграма?",
        options: [
            "A - UML клас диаграма",
            "B - Нито един от посочените",
            "C - UML диаграма на потребителските случаи",
            "D - UML диаграма на състоянията",
            "E - UML диаграма на последователността",
        ],
        correctAnswers: ["A"],
    },
    {
        question: "Кое от следните е пример за вградена софтуерна система?",
        options: [
            "A - Софтуер за управление на потребителските акаунти в банка",
            "B - Софтуер за онлайн залагания за спортни събития",
            "C - Софтуер за измерване на влажността в складово помещение",
            "D - Микроуслуга, която дава информация за наличностите на отделните стоки в складово помещение",
        ],
        correctAnswers: ["C"],
    },
    {
        question: "Колко фази има в Скръм/Scrum/?",
        options: [
            "A - две",
            "B - Scrum e гъвкав метод, което означава, че няма фази",
            "C - три",
            "D - четири",
        ],
        correctAnswers: ["C"],
    },
    {
        question: "В кои от следните UML диаграми се използват класове и/или обекти?",
        options: [
            "A - UML клас диаграма",
            "B - UML диаграма на активността",
            "C - UML диаграма на състоянията",
            "D - UML диаграма на последователността",
        ],
        correctAnswers: ["A", "D"],
    },
    {
        question:
            "Кои от следните рискове ще се отразят И НА продукта, И НА процеса? (Три верни отговора)",
        options: [
            "A - Критични промени в изискванията",
            "B - Промяна в мениджмънта на проекта",
            "C - На пазара излиза силен конкурент",
            "D - Опитни хора напускат екипа преди края на проекта",
            "E - Забавяне на спецификацията",
            "F - Грешна преценка за обема на проекта",
        ],
        correctAnswers: ["A", "E", "F"],
    },
    {
        question: "Кое от изброените НЕ Е цел на проучване на осъществимост?",
        options: [
            "A - Дали системата може да бъде интегрирана с други използваеми системи",
            "B - Дали системата може да бъде реализирана с настоящите технологии",
            "C - Дали архитектурата на системата може да бъде изградена според изискванията",
            "D - Дали системата допринася за целите на организацията",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Кое от изброените не е един от 4-те сектора на всяко завъртане по спираловидния модел за разработване на софтуер?",
        options: [
            "A - Разработване и валидиране",
            "B - Оценка на риска",
            "C - Установяване на целите",
            "D - Планиране",
            "E - Анализ на изискванията",
        ],
        correctAnswers: ["E"],
    },
    {
        question:
            "Кои от следните са характеристики на вградените софтуерни системи? (посочете до 4 верни отговора)",
        options: [
            "A - Ограничено количество памет",
            "B - Проверка за грешки и тестването на системата не е от значение за тях",
            "C - Неограничени възможности на процесора",
            "D - Обикновено имат дълъг период на употреба",
            "E - Необходимо е да се пише код 24 часа в денонощието",
            "F - Архитектурата на процесора, на който се пише кода на системата, може да е различна от архитектурата на процесора, на който ще се изпълнява",
            "G - За реализацията им често се използва езика С",
        ],
        correctAnswers: ["A", "D", "F", "G"],
    },
    {
        question:
            "Практически е невъзможно да се осигури висока надеждност на софтуерни системи, които имат грешки в кода",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question: "В диаграмите на последователност е възможно моделиране на условни преходи.",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question:
            "Каква е най-важната разлика между разработването на общ софтуер (generic software) и поръчан софтуер (custom software)?",
        options: [
            "A - Кой определя изискванията към софтуера",
            "B - Кой разработва софтуера",
            "C - Кой тества софтуера",
            "D - Кой внедрява софтуера",
        ],
        correctAnswers: ["A"],
    },
    {
        question: "Кой от следните модели не е подходящ за всякаква промяна?",
        options: [
            "A - Модела на бързата разработка",
            "B - Прототипен",
            "C - Спираловиден",
            "D - Модела на водопада",
        ],
        correctAnswers: ["D"],
    },
    {
        question: "Спецификацията на софтуерните изисквания описва само функционалните изисквания",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["B"],
    },
    {
        question:
            "Подредете рисковете според тяхната критичност, започвайки от най-малко критичния\n1) Ключови хора от екипа отсъстват в много важен момент от проекта\n2) Организационни промени налагат ограничение на бюджета на проекта\n3) Клиентите не разбират последствията от промените на изискванията\n4) Кодът генериран чрез инструменти за генериране на код е неефективен",
        options: ["A - 4-3-1-2", "B - 1-2-3-4", "C - 2-3-1-4", "D - 3-2-4-1"],
        correctAnswers: ["A"],
    },
    {
        question: "Кое от изброените е функционално изискване?",
        options: [
            "A - Системата трябва да е съобразена с GDPR",
            "B - Системата трябва да позволява търсене на местоположението.",
            "C - Системата трябва да е написана на Java",
            "D - Системата трябва да отговаря на заявка в рамките на 1 сек",
        ],
        correctAnswers: ["B"],
    },
    {
        question: "Системите с реално време се характеризират с",
        options: [
            "A - Време за изпълнение и приоритети на процесите",
            "B - Ниски хардуерни изисквания за памет и производителност",
            "C - Големи хардуерни изисквания за памет и производителност",
            "D - Време за изпълнение и приоритети на хардуерните ресурси",
        ],
        correctAnswers: ["C"],
    },
    {
        question: "Кои от изброените не са верни за управление на качеството?",
        options: [
            "A - Установяване на стандарти и практики за управление на качеството в организацията започва преди стартирането на конкретен проект",
            "B - Основната дейност при управлението на качеството е тестването на кода",
            "C - При по-малки системи управлението на качеството не е толкова важно",
            "D - Управлението на качеството трябва да бъде съпътствано от съответната документация за прогреса на проекта",
        ],
        correctAnswers: ["A", "C"],
    },
    {
        question:
            "При разработване на по-гъвкави методологии е по-важно да се създаде софтуер, който удовлетворява нуждите на клиента днес отколкото да се притеснява за характеристиките, които могат да са необходими в бъдеще",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question:
            "*Кои от изброените дейности НЕ включват участие на заинтересовани лица? (Два верни отговора)",
        options: [
            "A - Етнография",
            "B - Интервюта",
            "C - Потребителски случаи",
            "D - Прототипиране",
            "E - Сценарии",
        ],
        correctAnswers: ["A", "C"],
    },
    {
        question: "Надеждността на системата може да се измерва с вероятност за отказ",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question: "Моделът на бързата разработка има високи изисквания за надеждност",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["B"],
    },
    {
        question: "Кое от изброените не е дейност при управлението на качеството?",
        options: [
            "A - Установяване на рамка за организационните процеси и стандарти",
            "B - Планиране на качеството",
            "C - Управление на промените",
            "D - Управление на рисковете",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Кои от изброените дейности НЕ СА основни при управлението на проекти (два верни отговора)",
        options: [
            "A - Писане на предложение за проект",
            "B - Управление на хора",
            "C - Планиране на проект",
            "D - Комуникация с клиента",
            "E - Управление на средата на разработване",
        ],
        correctAnswers: ["A", "E"],
    },
    {
        question:
            "При поддръжка е задължително да се прави реверсивно инженерство на системата, за да се обърнат интерфейсите на класовете в системата според установените конвенции за писане на код в организацията",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question: "Заинтересованите лица са само хора, които искат да закупят дадена система",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["B"],
    },
    {
        question: "Гъвкави софтуерни модели на процеси се наричат гъвкави защото",
        options: [
            "A - широко използват създаването на прототипи",
            "B - елиминират нуждата от тежка документация",
            "C - наблягат на адаптивност",
            "D - не си губят времето за активности по планирането",
        ],
        correctAnswers: ["C"],
    },
    {
        question: "Идентифицирайте недостатъците на спираловидния модел на разработване на софтуер",
        options: [
            "A - Допълнителна функционалност може да се добави на по-късен етап",
            "B - Много време се отделя за риск анализ",
            "C - Строго одобрение и контрол на документацията",
            "D - Не работи добре за малки проекти",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Какви са основните цели на рефакторинга при гъвкавата методология XP? (Три верни отговора)",
        options: [
            "A – създава общо знание за кода в рамките на организацията",
            "B – улеснява промените, когато такива се налагат",
            "C – улеснява интегрирането на готов код",
            "D – намалява нуждата от документацията",
            "E – подобрява разбираемостта на кода",
        ],
        correctAnswers: ["B", "D", "E"],
    },
    {
        question: "Кое от следните не е валидно за гъвкави софтуерни процеси?",
        options: [
            "A – Само съществените работни продукти се създават",
            "B – Елиминира се използването на планиране на проект и тестване",
            "C – Използва се стратегия за инкрементална доставка на софтуерния продукт",
        ],
        correctAnswers: ["B"],
    },
    {
        question:
            "Sequence диаграмите се използват за моделиране на статични аспекти на софтуерните системи",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["B"],
    },
    {
        question:
            "Кои изисквания НЕ СА зададени правилно според критериите за атомичност, пълнота и яснота? (Два верни отговора)",
        options: [
            "A – Системата трябва да позволява търсене",
            "B – Системата трябва да позволява създаване на профил със следната информация – име, парола, дата на раждане, имейл",
            "C – Системата трябва да позволява изтриване на профил",
            "D – Системата трябва да позволява регистрацията и логването на потребителя",
        ],
        correctAnswers: ["A", "D"],
    },
    {
        question: "Коя от следните не е характеристика на Скръм модела за разработване на софтуер?",
        options: [
            "A – Стабилни изисквания",
            "B – Инкрементално разработване",
            "C – Гъвкавост",
            "D – Time-box график на работа",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "Кои от изброените рискове могат да бъдат класифицирани като технологични? (Два верни отговора)",
        options: [
            "A - Времето необходимо за реализацията на софтуера е неправилно планирано",
            "B - Компонентите от външни доставчици (COTS) не отговарят на спецификацията си",
            "C - Избраните CASE инструменти са несъвместими",
            "D - Екипът няма необходимите познания в технологията за реализиране на проекта",
            "E - Невъзможно е наемането на хора с необходимата квалификация",
            "F - Базата данни не може да обработи желаният брой заявки",
        ],
        correctAnswers: ["C", "F"],
    },
    {
        question:
            "Подредете следните дейности в процеса на инженеринг на изискванията \n1) Откриване на изискванията 2) Приоритизация и договаряне 3) Документиране на изискванията 4) Организиране и класификация на изискванията",
        options: ["A - 1,2,4,3", "B - 2,3,4,1", "C - 1,2,3,4", "D - 1,4,3,2"],
        correctAnswers: ["D"],
    },
    {
        question:
            "Какъв е обикновено редът на дейностите, по който е организиран традиционния процес при ISO 9001?\n a) Тестване b) Обслужване c) Дизайн и разработване d) Производство и доставка",
        options: ["A - d,b,c,a", "B - a,d,c,b", "C - b,d,a,c", "D - c,a,b,d"],
        correctAnswers: ["D"],
    },
    {
        question:
            "Как Инкременталния модел се различава от Спираловидния модел за разработване на софтуер?",
        options: [
            "A - Прогресът може да се измерва при инкременталния модел",
            "B - Променящите се изисквания могат да се приемат в Инкременталния модел",
            "C - Потребителите могат да видят системата рано при Инкременталния модел",
            "D - Всички от изброените",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Кое от следите не е метод за осигуряване на изправност (dependability) на системата?",
        options: [
            "A - Използване на формални спецификации и модели",
            "B - Инспекции на кода",
            "C - Разработване на готов прототип на всяка итерация",
            "D - Използване на механизми за изключения (exceptions) и обработката им",
        ],
        correctAnswers: ["C"],
    },
    {
        question: "Кои от изброените са верни за стандартите? (едно или повече)",
        options: [
            "A - Използват се добри практики",
            "B - Затрудняват новите хора в екипа, тъй като трябва да учат много бюрократични процедури и правила за работа",
            "C - Се нуждаят от съответните софтуерни инструменти за да се улесни прилагането им",
            "D - Лесно и често се актуализират",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "Кои от изброените могат да бъдат проверени чрез ревю на изискванията? (Два верни отговора)",
        options: [
            "А - Разширяемост (Extendability)",
            "B - Надеждност (Reliability)",
            "C - Наличност (Availability)",
            "D - Верифицируемост (Verifiability)",
            "E - Проследяемост (Traceability)",
        ],
        correctAnswers: ["D", "E"],
    },
    {
        question:
            "Кой от моделите може да бъде избран, ако потребителят участва във всички фази от процеса на разработка на софтуера?",
        options: [
            "А - Модела на водопада",
            "B - Прототипния модел",
            "C - Модела на бързата/стръмната разработка",
            "D - Нито един от изброените",
        ],
        correctAnswers: ["B"],
    },
    {
        question: "Какво обикновено включва документацията на софтуерната архитектура?",
        options: [
            "A - Вариантите за тестване на системата",
            "B - Различни UML диаграми",
            "C - Всички коментари към кода на системата",
            "D - Всички посочени са верни",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "По принцип софтуерът се смята за успешен само ако поведението му е в съответствие с желанията на клиента.",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question: "Какви са основните предимства на неформалните групи? (Два верни отговора)",
        options: [
            "A - Всеки в екипа има свободата сам да избира задачите си",
            "B - Има лидер, който поема отговорността да определя задачите в екипа",
            "C - Групата действа като едно цяло",
            "D - Има един представител, който служи за връзка с външния свят",
        ],
        correctAnswers: ["A", "D"],
    },
    {
        question: "Кое не е функция на ревюто?",
        options: [
            "A - Тренировъчна функция",
            "B - Преглед на прогреса на проекта",
            "C - Изследване на артефактите на проекта",
            "D - Тестване на софтуера",
        ],
        correctAnswers: ["A"],
    },
    {
        question: "Спираловидният модел на софтуерен процес има високи изисквания за надеждност?",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question: "Кои от изброените са стандарти за качество на процес?",
        options: [
            "A - Планиране на тестване ",
            "B - Форма за тестови случаи",
            "C - Одобрение на плана на проекта",
            "D - Форма за управление на промени",
        ],
        correctAnswers: ["C", "D"],
    },
    {
        question:
            "Кое е основното предимство на използване на Инкрементален модел на разработване на софтуер?",
        options: [
            "A - Потребителят може да отговаря на всеки инкремент/стъпка",
            "B - Използва се когато има нужда продукта да стигне до пазара рано",
            "C - По-лесно за тестване и дебъгване",
            "D - По-лесно за тестване и дебъгване и се използва, когато има нужда продукта да стигне до пазара рано",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "При осигуряването на качеството на софтуера при гъвкавите методологии често се разчита на инспекции:",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question:
            "Кои от изброените са нефункционални организационни изисквания? (Два верни отговора)",
        options: [
            "A – Системата трябва да е отказоустойчива",
            "B – Системата трябва да се реализира чрез Scrum",
            "C – Системата трябва да е съвместима с iOS и Android",
            "D – Системата трябва да е лесно преносима",
        ],
        correctAnswers: ["B", "C"],
    },
    {
        question:
            "При разширяване на наследения софтуер може да се изгражда повторно архитектурата му",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question:
            "Управление на качеството представлява независима проверка на процеса на разработване?",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["A"],
    },
    {
        question: "Коя от следните се класифицира като динамична диаграма в UML?",
        options: [
            "A – Deployment diagram",
            "B – Class diagram",
            "C – Package diagram",
            "D – Sequence diagram",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Кои четири рамкови активности (framework activities) се изпълняват с екстремно програмиране (Extreme Programming / XP)?",
        options: [
            "A – планиране, анализ, кодиране, тестване",
            "B – планиране, анализ, дизайн, кодиране",
            "C – анализ, дизайн, кодиране, тестване",
            "D – планиране, дизайн, кодиране, тестване",
        ],
        correctAnswers: ["D"],
    },
    {
        question: "Семафорите представляват подход, който се използва за",
        options: [
            "A – създаване на разклонения на паралелно-изпълняващи се програми",
            "B – контрол на достъпа до данни, когато повече от един процес се опитва да ги достъпи",
            "C – дефиниране на събитията, които потребителите обработват",
            "D – управление на достъпа на задачите до процесора на компютъра",
        ],
        correctAnswers: ["B"],
    },
    {
        question:
            "Кои от изброените UML диаграми НЕ са подходящи за представяне на взаимодействието на системата с околната и среда (потребители и други системи)? (Три верни отговора)",
        options: [
            "A – Sequence diagram",
            "B – Use case diagram",
            "C – Conventional diagram",
            "D – Class diagram",
            "E – Package diagram",
        ],
        correctAnswers: ["C", "D", "E"],
    },
    {
        question:
            "Тестването на системата е напълно достатъчно, за да се докаже, че тя не е надеждна",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["B"],
    },
    {
        question:
            "Кои от изброените НЕ СА характерни за гъвкавите методологии? Изберете едно или повече",
        options: [
            "A – възможност за лесна поддръжка на продукта",
            "B – активно включване на клиента",
            "C – детайлен анализ на изискванията",
            "D – итеративно и инкрементално разработване",
            "E – готовност за проблеми",
        ],
        correctAnswers: ["A", "C"],
    },
    {
        question:
            "Коя от следните не е допълнителна дейност, която допълва петте рамкови дейности и помага на управлението на екипа и ... прогреса, качеството, промените и риска?",
        options: [
            "A – измерване /Measurment/",
            "B – потребителски ревюта /User Reviews/",
            "C – управление на риска /Risk Management/",
            "D – управление на многократното използване /Reusability meanagement/",
        ],
        correctAnswers: ["B"],
    },
    {
        question: "Кое от изброените НЕ е стъпка при управление на промените при изискванията?",
        options: [
            "A – анализ на цената",
            "B – анализ на проблема",
            "C – анализ на промяната",
            "D – анализ на мнението на заинтересованите лица",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Ако трябва да опишете последователността между различните състояния на системата, каква диаграма бихте използвали?",
        options: [
            "A – UML диаграма на последователността (sequence)",
            "B – UML диаграма на действията (activity diagram)",
            "C – UML клас диаграма",
            "D – UML диаграма на потребителските случаи (use case)",
        ],
        correctAnswers: ["B"],
    },
    {
        question: "Коя е фундаментална дейност, която е обща за всички софтуерни процеси?",
        options: [
            "A – Проектиране и имплементиране / design and implementation",
            "B – Валидиране на софтуера / software validation",
            "C – Развитие на софтуера / software evolution",
            "D – Специфициране на изисквания / software specification",
            "E – Планиране / planning",
        ],
        correctAnswers: ["A"],
    },
    {
        question: "Няква диаграма",
        options: [
            "A - Kлас диаграма (class diagram)",
            "B - Диаграма на вариантите на употреба(use case diagram)",
            "C - Нито едно от посочените",
            "D - Диаграма на действията(activity diagram)",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Коя от следните UML диаграми е подходяща за моделиране на процесите, които протичат в софтуерна система?",
        options: [
            "A - Full time diagram",
            "B - Actions diagram",
            "C - Activity diagram",
            "D - Package diagram",
        ],
        correctAnswers: ["C"],
    },
    {
        question: "Системите за реално време се характеризират с:",
        options: [
            "A - Възможност за регистрация на външни събития",
            "B - Ниска предсказуемост и ниска възможност за реакция на външни събития",
            "C - Голямо количество използвани ресурси, което ги прави практически неприложими",
            "D - Възможност за последователно извикване на задачи с голямо време на изпълнение",
        ],
        correctAnswers: ["A"],
    },
    {
        question: "XP в контекста на методологии за разработване на софтуер е ___________",
        options: [
            "A - Extreme processing /Екстремно обработване/",
            "B - Excellent programming /Отлично програмиране/",
            "C - Excellent processing /Отлично обработване/",
            "D - Extreme programming /Екстремно програмиране/",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "При системите за реално време най-малко значение има времето за което всеки процес (задача) в системата завършва своето изпълнение.",
        options: ["A - Истина", "B - Лъжа"],
        correctAnswers: ["B"],
    },
    {
        question:
            "Четири типа промени се извършват по време на фазата поддръжка. Коя от следните не попада в тази категория?",
        options: [
            "A - Адаптиране /Adaptation/",
            "B - Транслиране /Translation/",
            "C - Превенция /Prevention/",
            "D - Корегиране /Correction/",
        ],
        correctAnswers: ["B"],
    },
    {
        question: "Кои от изброените са стандарти за качество на процес?",
        options: [
            "A - Управление на промени",
            "B - Submission на нов код за версия на системата",
            "C - Формат на плана на проекта",
            "D - Java стил на програмиране",
        ],
        correctAnswers: ["A", "C"],
    },
    {
        question: "Софтуерната архитектура НЕ Е:",
        options: [
            "a. Абстракция, която скрива детайлите по реализацията на програмите",
            "b. Документ, който може да подобри организацията на работа в софтуерната компания",
            "c. Модел на структурата на управление на софтуерната компания",
            "d. Съвкупност от представяне на системата от различни гледни точки",
        ],
        correctAnswers: ["C"],
    },
    {
        question:
            "Според теорията в структурата на конкурентното изпълнение са компоненти и нишки (logical threads)\n синхронизационните и комуникационни връзки между тях.\n За какво може да се използва тази структура",
        options: [
            "a. За определяне на хардуерните изисквания на системата",
            "b. За разпределяне на работата по имплементация на системата между различните екипи",
            "c. За оценяване на нефункционалните характеристики на системата",
            "d. За анализ на взаимодействието между процесите и предотвратяване на блокировки (deadlocks)",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Кои от следните може да характеризират производителност на системата (2 верни отговора)",
        options: [
            "a. Време за изпълнение",
            "b. Вероятност за отказ",
            "c. средно време за възстановяване",
            "d. латентност",
        ],
        correctAnswers: ["A", "D"],
    },
    {
        question: "Софтуерният архитект работи независимо от останалите заинтересовани лица",
        options: ["a. ВЯРНО", "b. невярно"],
        correctAnswers: ["B"],
    },
    {
        question:
            "Изборът на структури, които ще бъдат включени в документацията на софтуерната архитектура зависи от (2 верни отговора)",
        options: [
            "a.Приложната област, където ще се внедрява софтуерната система ",
            "b.Нефункционалните изисквания (качествените характеристики)",
            "c.Броят на заинтересованите лица",
            "d. Конкретните заинтересовани лица, които ще четат документацията",
        ],
        correctAnswers: ["A", "D"],
    },
    {
        question: "Под производителност (performance) в софтуерните системи се разбира",
        options: [
            "a. Времето, за което системата реагира на възникващите събития",
            "b. Възможност на потребителя да върши бързо своята работа",
            "c. Възможност на системата да осигури работа без отказ",
            "d. Мярка за себестойността на промените в системата",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "Контролните точки (checkpoint) като тактика за постигане на готовност (availability) \nпредставляват целенасочено изпращане на сигнал между два модула с цел единият да се увери, че другят е активен",
        options: ["a. Вярно", "b. невярно"],
        correctAnswers: ["B"],
    },
    {
        question:
            "Чрез използването на обвивки (посредник/mediator/wrapper) при проектиране на софтуерна архитектура\n не се подобрява изменяемостта на системата но има възможност за повишаване на сигурността",
        options: ["a. ВЯРНО", "b. невярно"],
        correctAnswers: ["B"],
    },
    {
        question:
            "Основното предимство при т.нар. отлагане на свързването (финалната интеграция на системата се прави при потребителя) е:",
        options: [
            "a. повишава се изменяемостта на системата",
            "b. повишава се сигурността на системата",
            "C. улеснява се работата на крайните потребители",
            "d. намалява се цената на разработка",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "Какво представляват архитектурните драйвери от гледна точка на процеса за проектиране",
        options: [
            "a.Най-важните технологии, които ще бъдат използвани",
            "b. Връзка между архитектурата на системата и нейната реализация",
            "c. Средство за улесняване на проектирането на софтуерната архитектура",
            "d. Изискванията към системата, които имат най-висок приоритет",
        ],
        correctAnswers: ["D"],
    },
    {
        question:
            "Кои от следните методи може да се приложат за повишаване на производителността на системата (4 верни отговора)",
        options: [
            "a. Подобряване на алгоритмите",
            "b. Въвеждане на обвивни модули",
            "c. Промяна на периода (при синхронни системи)",
            "d. Въвеждане на опашка с краен размер",
            "e. Увеличаване на броя на модулите в системата",
            "f. Включване на допълнителни ресурси",
        ],
        correctAnswers: ["A", "C", "D", "F"],
    },
    {
        question: "Показаната фигура може да се разглежда като:",
        options: [
            "а. Модел на софтуерната архитектура",
            "b. Use-case диаграма",
            "c. Структура-декомпозиция на модулите",
            "d. Структура употреба на модулите (uses structure)",
        ],
        correctAnswers: ["D"],
    },
    {
        question: "Архитектурният стил (шаблон) представлява",
        options: [
            "а. Дефиниция на оределени типове архитектурни елементи, заедно със начина на тяхното свързване",
            "b. Стандарт за документация на софтуерната архитектура",
            "с. Модел за преход от софтуерна архитектура към код ",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "При какъв тип системи е най-подходящо да се използва структура на внедряването (deployment)",
        options: [
            "а. Централизирани",
            "b. Разпределени",
            "c. Системи с паралелно-протичащи процеси",
        ],
        correctAnswers: ["B"],
    },
    {
        question:
            "Редно ли е в софтуерната архитектура да се описват свойства и методи на класовете, които изграждат обектите в системата",
        options: ["a. da", "b. ne"],
        correctAnswers: ["B"],
    },
    {
        question:
            "Проектирането на софтуерната архитектура започва след анализа на софтуерните изисквания",
        options: ["a. vqrno", "b. ne vqrno"],
        correctAnswers: ["A"],
    },
    {
        question:
            "При проектирането на архитектурата може да се ограничи броя на модулите, с които Даден компонент комуникира, за да се:",
        options: [
            "a.намали сложността на системата и да се ускори процеса на разработка",
            "b. направи архитектурата по-ясна и да се разбира от всички заинтересовани лица",
            "c. ограничи необходимостта от промени в други модули, с които даденият комуникира",
            "d. не се прилага такава тактика",
        ],
        correctAnswers: ["C"],
    },
    {
        question: "В кой от следните редове е допусната грешка:",
        options: [
            "а. Въздействие, обект и източник са елементи на сценариите за качество",
            "b. Въздействие, резултат и източник са елементи на сценариите за качество",
            "c. Въздействие, алгоритъм и източник са елементи на сценариите за качество",
            "d. Въздействие, количествени параметри и контекст са елементи на сценариите за качество",
        ],
        correctAnswers: ["C"],
    },
    {
        question:
            "Да се проектира диаграма на декомпозицията и употреба на модулите на система за контрол на скоростта във превозните средства, \nкоято отговаря на следните изисквания:",
        options: [
            "а. Да се поддържа зададена от водача постоянна скорост. При спускане или изкачване, системата да предприема съответните действия за корекция на скоростта.",
            "b. При натискане на педала на спирачката от страна на водача се прекратява контрола на скоростта. При отпускането му - скоростта се връща до първоначално зададената стойност.",
            "c. Всички действия на системата трябва да се извършват възможно най-бързо.",
            "d. Системата да позволява лесна подмяна на хардуера - датчици, сензори и изпълнителни механизми (actuators)",
            "e. Входове на системата са: датчик за текущата скорост, сензор за натискане на педала на спирачката, изпълнителен механизъм за задействане на спирачките, изпълнителен механизъм за промяна на отвора на клапана за подаване на гориво. ",
            "f. Опишете отговорностите на всички модули и характера на предаваните данни. Пояснение: счита се, че скоростта може да се намалява и при затваряне на клапана за подаване на гориво - т.нар. двигател в режим на спирачка.",
        ],
        correctAnswers: ["Kur"],
    },
    {
        question:
            "Най-подходящият подход за проектиране на софтуерна архитектура е да се започне от изискванията към качеството на системата (нефункционалните изисквания)",
        options: ["a. vqrno", "b. nevqrno"],
        correctAnswers: ["A"],
    },
    {
        question: "С какво започва реализацията на софтуерната система (2 верни отговора)",
        options: [
            "a. Основните компоненти, които реализират протоколите на взаимодействие (middleware)",
            "b. Със специфичните най-често използвани методи за обработка на информацията",
            "с. Реализират се първо интерфейсите на компонентите",
        ],
        correctAnswers: ["A", "B"],
    },
    {
        question:
            "Според дефиницията софтуерната архитектура представлява набор от структури. В тази връзка може ли да се каже че декомпозицията на модули е архитектура на системата?",
        options: ["a. da", "b. ne"],
        correctAnswers: ["B"],
    },
    {
        question: "Анализът на софтуерни архитектури е процес при който",
        options: [
            "a. се проверява дали проектираната вече архитектура удовлетворява поставените изисквания",
            "b. се оценява производителността на системата",
            "c. се определят най-важните изисквания към архитектурата",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "Анализът на софтуерни архитектури включва различни фази, срещи и разговори между заинтересованите лица и оценяващ екип",
        options: ["a. vqrno", "b. nevqrno"],
        correctAnswers: ["A"],
    },
    {
        question: "Kое от следните не е вярно",
        options: [
            "a. В АТАМ взимат участие всички заинтересовани лица.",
            "b. АТАМ оценява доколко кода на системата отговаря на архитектурата",
            "c. Разкрива до каква степен архитектурата удовлетворява качествените изисквания",
            "d. Не дава оценка на бизнес ползата от системата",
        ],
        correctAnswers: ["B"],
    },
    {
        question:
            "Процесът по проектиране на архитектурата е възможно да продължи дори и след създаване на скелетната система",
        options: ["a. vqrno", "b. nevqrno"],
        correctAnswers: ["A"],
    },
    {
        question: "Под сигурност (security) в софтуерните системи се разбира",
        options: [
            "a. Възможност на системата да осигури работа без отказ",
            "b. Мярка за способността на системата да устоява на опити за неразрешена употреба, без това да пречи на легитимните потребители",
            "с. Мярка за себестойността на промените в системата",
            "d. Увереност в успешното изпълнение на проекта",
        ],
        correctAnswers: ["B"],
    },
    {
        question: "Под готовност (availability) в софтуерните системи се разбира",
        options: [
            "а. Времето, за което системата реагира на възникващите събития",
            "b. Възможност на системата да осигури работа без отказ",
            "с. Мярка за себестойността на промените в системата",
            "d. Лекота при откриване на грешки в софтуера >",
        ],
        correctAnswers: ["B"],
    },
    {
        question:
            "Кое от следните не е пример за архитектурна тактика за постигане на готовност в софтуерните системи",
        options: [
            "a. Декомпозиция на модули",
            "b. Exo (Ping/echo)",
            "c. Heartbeat (Keepalive)",
            "d. Излишък (redundancy)",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "Смисълът на тактиките за локализиране на промените (за постигане на изменяемост) е:",
        options: [
            "а. Да се предвидят възможните места за бъдещи промени в системата и да се обособят в рамките на минимален брой модули",
            "b. Да не се променя архитектурата по време на разработка на системата",
            "с. Периодично събиране на екипите по разработка на системата на едно място",
            "d. Няма такава тактика за постигане на изменяемост",
        ],
        correctAnswers: ["A"],
    },
    {
        question:
            "Може ли рестартирането на даден модул/компонент от системата да се счита за тактика за постигане на готовност",
        options: ["a. да", "b. He"],
        correctAnswers: ["A"],
    },
    {
        question: "Проектирането на софтуерната архитектура е итеративен процес",
        options: ["a. ВЯРНО", "b. невярно"],
        correctAnswers: ["A"],
    },
    {
        question:
            "Кои от изброените влияят върху избора на софтуерна архитектура? (3 верни отговора)",
        options: [
            "a. Предишен опит на организацията",
            "b. Съвременни технологични тенденции",
            "c. Броят проекти на QA специалистите в организацията",
            "d. Опит и рутина на софтуерните архитекти и",
        ],
        correctAnswers: ["A", "B", "D"],
    },
    {
        question:
            "В кои от следните дейности е редно да взимат участие софтуерните архитекти (3 верни отговора)",
        options: [
            "a. Разработка на системата",
            "b. Анализ и оценка на СА",
            "c. Документиране на софтуерната архитектура",
            "d. Разпределяне на бюджета на проекта за разработка на системата",
            "e. Разбиране на изискванията",
        ],
        correctAnswers: ["B", "C", "E"],
    },
    {
        question: "Структурата на разпределение на работата (work assignment)",
        options: [
            "а. Показва абстрактни групи от хора, които реализират модулите на системата",
            "b. Е изготвен от мениджъра на проекта документ, който назначава задачите на останалите участници в разработката на проекта",
            "с. Посочва задълженията на отделните заинтересовани лица",
            "d. Показва последователността на изпълнение на отделните компоненти в системата",
        ],
        correctAnswers: ["A"],
    },
    {
        question: "Смисълът на нефункционалните изисквания към системата е",
        options: [
            "а. Да се използват най-съвременните технологии и програмни езици",
            "b. Да се намали цената на разработка на софтуерната система",
            "c. Да се поставят допълнителни условия, които оределят как системата ще реализира функционалността си",
            "d. Да се улесни разработката на системата",
        ],
        correctAnswers: ["C"],
    },
    {
        question:
            "Сигурност и отказоустойчивост са две нефункционални характеристики, които често си противоречат",
        options: ["a. da", "b. ne"],
        correctAnswers: ["A"],
    },
    {
        question:
            "Сценарият за качество представя специфично изискване към поведението на дадена система в зависимост от определено качество",
        options: ["a. da", "b. ne"],
        correctAnswers: ["A"],
    },
    {
        question:
            "Кое от следните НЕ е в вярно по отношение на документацията на софтуерната архитектура",
        options: [
            "a. Процесът на документиране включва известна доза творчество",
            "b. Документацията на архитектурата се определя от това кой ще я използва",
            "c. Основен принцип при създаването и е да се напише възможно най-бързо",
            "d. Включва набор от документи",
        ],
        correctAnswers: ["C"],
    },
    {
        question: "Документацията на софтуерната архитектура (2 верни отговора)",
        options: [
            "a. Включва описание на структурите на архитектурата плюс придружаващи документи",
            "b. Включва колкото е възможно повече структури",
            "с. Включва колкото е възможно по-малко структури",
            "d. Вклюва определени структури, в зависимост от самата система и това кой ще чете документацията",
        ],
        correctAnswers: ["A", "D"],
    },
    {
        question:
            "В анализа на софтуерната архитектура може да се включат и различни методи за оценяване на бизнес-ползата от така проектираната система",
        options: ["a. da", "b. ne"],
        correctAnswers: ["A"],
    },
    {
        question: "В рамките на процеса по оценяване, архитекта прави презентация на архитектурата",
        options: ["a. da", "b. ne"],
        correctAnswers: ["A"],
    },
];

var totalPoints = 0;
var askedQuestions = 0;

function getRandomIndex(array) {
    return Math.floor(Math.random() * array.length);
}

function getRandomQuestion() {
    var index = getRandomIndex(questions);
    return questions.splice(index, 1)[0];
}

async function askQuestion() {
    if (questions.length === 0) {
        console.log("Няма повече въпроси.");
        readline.close();
        return;
    }

    var currentQuestion = getRandomQuestion();
    console.log(currentQuestion.question);

    for (var i = 0; i < currentQuestion.options.length; i++) {
        console.log(currentQuestion.options[i]);
    }

    const userAnswer = await askUser(
        "Моля, въведете буквата (или буквите, разделени със запетаи) на вашия отговор:"
    );
    checkAnswer(userAnswer, currentQuestion.correctAnswers);
    askQuestion(); // След като приключим с текущия въпрос, задаваме следващия.
}

function askUser(question) {
    return new Promise((resolve) => {
        readline.question(question, resolve);
    });
}

function checkAnswer(userAnswer, correctAnswers) {
    var userAnswersArray = userAnswer.split(",").map(function (item) {
        return item.trim().toUpperCase();
    });

    var isCorrect = true;
    for (var i = 0; i < userAnswersArray.length; i++) {
        if (!correctAnswers.includes(userAnswersArray[i])) {
            isCorrect = false;
            break;
        }
    }

    if (isCorrect) {
        console.log("\nВашият отговор е правилен! Получавате 1 точка.");
        totalPoints++;
        askedQuestions++;
    } else {
        askedQuestions++;
        console.log(
            "\nВашият отговор е грешен. Правилните отговори бяха: " + correctAnswers.join(", ")
        );
    }

    console.log("Точки: " + totalPoints + "/" + askedQuestions + ".\n\n");
}
console.log("въпросите са " + questions.length);
askQuestion(); // Започваме изпълнението на програмата
